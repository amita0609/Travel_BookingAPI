// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBookingAPI.Data;

#nullable disable

namespace TravelBookingAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230511124825_SeedUserTable")]
    partial class SeedUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelBookingAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jam@gmail.com",
                            Name = "Jam",
                            Password = "custom123",
                            Role = "custom"
                        },
                        new
                        {
                            Id = 2,
                            Email = "siam@gmail.com",
                            Name = "saim",
                            Password = "normal123",
                            Role = "normal"
                        },
                        new
                        {
                            Id = 3,
                            Email = "john@gmail.com",
                            Name = "John",
                            Password = "johny123",
                            Role = "custom"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
